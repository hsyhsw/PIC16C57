MPASM

CCS PCB C Compiler, Version 4.093, 5967               26-11-13 18:32

               Filename: C:\Documents and Settings\cse\πŸ≈¡ »≠∏È\sort.lst

               ROM used: 44 words (2%)
                         Largest free fragment is 512
               RAM used: 14 (58%) at main() level
                         14 (58%) worst case
               Stack:    0 locations

0000 0A01       00001 GOTO   001
07FF 0A00       00002 GOTO   000
                00003 .................... #include <16c57.h> 
                00004 .................... //////// Standard Header file for the PIC16C57 device //////////////// 
                00005 .................... #device PIC16C57 
                00116 .................... #list 
                00117 ....................  
                00118 ....................  
                00119 .................... #define ARRAY_LENGTH (5) 
                00120 ....................  
                00121 .................... #define write(addr, data) (*(unsigned char *) addr) = data 
                00122 ....................  
                00123 .................... #define PORTA (0x05) 
                00124 .................... #define PORTB (0x06) 
                00125 .................... #define PORTC (0x07) 
                00126 ....................  
                00127 .................... /* 
                00128 .................... int main() { 
                00129 ....................    unsigned char array[ARRAY_LENGTH] = { 35, 2, 15, 5, 20 }; 
                00130 ....................  
                00131 ....................    int i; 
                00132 ....................    int j; 
                00133 ....................    int temp; 
                00134 ....................     
                00135 ....................    int arrayLen = 5; 
                00136 ....................     
                00137 ....................    //configure port b as output 
                00138 .................... #asm 
                00139 ....................    MOVLW 0x00 
                00140 ....................    TRIS PORTA 
                00141 ....................    TRIS PORTB 
                00142 ....................    TRIS PORTC 
                00143 .................... #endasm 
                00144 ....................  
                00145 ....................    //before sort 
                00146 ....................    for (i = 0; i < arrayLen; i++) { 
                00147 ....................       write(PORTA, 0x01); 
                00148 ....................       write(PORTB, array[i]); 
                00149 ....................       write(PORTA, 0x0F); 
                00150 ....................    } 
                00151 ....................     
                00152 ....................    for (i = 0; i < arrayLen - 1; i++) { 
                00153 ....................       for (j = 1; j < arrayLen - i; j++) { 
                00154 ....................          if (array[j - 1] > array[j]) { 
                00155 ....................             temp = array[j - 1]; 
                00156 ....................             array[j - 1] = array[j]; 
                00157 ....................             array[j] = temp; 
                00158 ....................          } 
                00159 ....................       } 
                00160 ....................    } 
                00161 ....................  
                00162 ....................    //after sort 
                00163 ....................    for (i = 0; i < arrayLen; i++) { 
                00164 ....................       write(PORTA, 0x01); 
                00165 ....................       write(PORTB, array[i]); 
                00166 ....................       write(PORTA, 0x0F); 
                00167 ....................    } 
                00168 ....................  
                00169 ....................    return 0; 
                00170 .................... } 
                00171 .................... */ 
                00172 ....................  
                00173 ....................  
                00174 .................... int main() { 
0001 0064       00175 CLRF   04
                00176 ....................    int array1[ARRAY_LENGTH] = { 50, 4, 3, 2, 1 }; 
0002 0C32       00177 MOVLW  32
0003 002E       00178 MOVWF  0E
0004 0C04       00179 MOVLW  04
0005 002F       00180 MOVWF  0F
0006 0C03       00181 MOVLW  03
0007 0030       00182 MOVWF  10
0008 0C02       00183 MOVLW  02
0009 0031       00184 MOVWF  11
000A 0C01       00185 MOVLW  01
000B 0032       00186 MOVWF  12
                00187 ....................  
                00188 ....................    int16 sum = 0; 
000C 0073       00189 CLRF   13
000D 0074       00190 CLRF   14
                00191 ....................    int i; 
                00192 ....................     
                00193 ....................    unsigned char *dat = &sum; 
000E 0C13       00194 MOVLW  13
000F 0036       00195 MOVWF  16
                00196 ....................     
                00197 ....................    //int arrayLen = 5; 
                00198 ....................     
                00199 ....................    //configure port b as output 
                00200 .................... #asm 
                00201 ....................    MOVLW 0x00 
0010 0C00       00202 MOVLW  00
                00203 ....................    TRIS PORTA 
0011 0005       00204 TRIS   5
                00205 ....................    TRIS PORTB 
0012 0006       00206 TRIS   6
                00207 ....................    TRIS PORTC 
0013 0007       00208 TRIS   7
                00209 .................... #endasm 
                00210 ....................  
                00211 ....................    for (i = 0; i < ARRAY_LENGTH; ++i) { 
0014 0075       00212 CLRF   15
0015 0C04       00213 MOVLW  04
0016 0028       00214 MOVWF  08
0017 0215       00215 MOVF   15,W
0018 0088       00216 SUBWF  08,W
0019 0703       00217 BTFSS  03.0
001A 0A24       00218 GOTO   024
                00219 ....................       sum += array1[i]; 
001B 0C0E       00220 MOVLW  0E
001C 01D5       00221 ADDWF  15,W
001D 0024       00222 MOVWF  04
001E 0200       00223 MOVF   00,W
001F 01F3       00224 ADDWF  13,F
0020 0603       00225 BTFSC  03.0
0021 02B4       00226 INCF   14,F
                00227 ....................    } 
0022 02B5       00228 INCF   15,F
0023 0A15       00229 GOTO   015
                00230 ....................     
                00231 ....................    write(PORTA, 0x01); 
0024 0C01       00232 MOVLW  01
0025 0025       00233 MOVWF  05
                00234 ....................    write(PORTB, sum); 
0026 0213       00235 MOVF   13,W
0027 0026       00236 MOVWF  06
                00237 ....................    write(PORTA, 0x0F); 
0028 0C0F       00238 MOVLW  0F
0029 0025       00239 MOVWF  05
                00240 ....................  
                00241 ....................    return 0; 
002A 0C00       00242 MOVLW  00
002B 0029       00243 MOVWF  09
                00244 .................... } 
                00245 ....................  
002C 0003       0246 SLEEP

Configuration Fuses:
   Word  1: 0FFB   RC NOWDT NOPROTECT

SYMBOL TABLE
  LABEL                             VALUE

_RETURN_                          00000009
main.array1                       0000000E
main.sum                          00000013
main.i                            00000015
main.dat                          00000016
Allocation:                       0000EEEF
main                              00000001

MEMORY USAGE
